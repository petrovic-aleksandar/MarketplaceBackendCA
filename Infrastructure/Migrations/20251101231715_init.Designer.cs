// <auto-generated />
using System;
using Marketplace.Infrastructure.Persistence;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Marketplace.Infrastructure.Migrations
{
    [DbContext(typeof(MarketplaceDbContext))]
    [Migration("20251101231715_init")]
    partial class init
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Marketplace.Domain.Entities.Image", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("IsFront")
                        .HasColumnType("bit");

                    b.Property<int>("ItemId")
                        .HasColumnType("int");

                    b.Property<string>("Path")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ItemId");

                    b.ToTable("Image");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            IsFront = true,
                            ItemId = 1,
                            Path = "audi_a4.jpg"
                        },
                        new
                        {
                            Id = 2,
                            IsFront = false,
                            ItemId = 1,
                            Path = "audi_a4_2.jpg"
                        },
                        new
                        {
                            Id = 3,
                            IsFront = false,
                            ItemId = 1,
                            Path = "audi_a4_3.jpg"
                        },
                        new
                        {
                            Id = 4,
                            IsFront = true,
                            ItemId = 2,
                            Path = "audi_a5.jpg"
                        },
                        new
                        {
                            Id = 5,
                            IsFront = true,
                            ItemId = 3,
                            Path = "audi_q5.jpg"
                        },
                        new
                        {
                            Id = 6,
                            IsFront = true,
                            ItemId = 4,
                            Path = "audi_tt.jpg"
                        },
                        new
                        {
                            Id = 7,
                            IsFront = true,
                            ItemId = 5,
                            Path = "lotuselise.jpg"
                        });
                });

            modelBuilder.Entity("Marketplace.Domain.Entities.Item", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("Createtime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.Property<int>("SellerId")
                        .HasColumnType("int");

                    b.Property<int>("TypeId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("SellerId");

                    b.HasIndex("TypeId");

                    b.ToTable("Item");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Createtime = new DateTime(2025, 10, 23, 20, 9, 22, 298, DateTimeKind.Local).AddTicks(7972),
                            Description = "Red color, 2021., 35 TFSI",
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Audi A4",
                            Price = 35000.0,
                            SellerId = 2,
                            TypeId = 1
                        },
                        new
                        {
                            Id = 2,
                            Createtime = new DateTime(2025, 10, 23, 20, 9, 22, 298, DateTimeKind.Local).AddTicks(7972),
                            Description = "A5 new model, 2021., 40 TFSI",
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Audi A5",
                            Price = 45000.0,
                            SellerId = 2,
                            TypeId = 1
                        },
                        new
                        {
                            Id = 3,
                            Createtime = new DateTime(2025, 10, 23, 20, 9, 22, 298, DateTimeKind.Local).AddTicks(7972),
                            Description = "SUV model, 2021., 45 TFSI",
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Audi Q5",
                            Price = 65000.0,
                            SellerId = 2,
                            TypeId = 1
                        },
                        new
                        {
                            Id = 4,
                            Createtime = new DateTime(2025, 10, 23, 20, 9, 22, 298, DateTimeKind.Local).AddTicks(7972),
                            Description = "Classic audi, 2016., 3.0 gasoline",
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Audi TT",
                            Price = 15000.0,
                            SellerId = 2,
                            TypeId = 1
                        },
                        new
                        {
                            Id = 5,
                            Createtime = new DateTime(2025, 10, 23, 20, 9, 22, 298, DateTimeKind.Local).AddTicks(7972),
                            Description = "Yellow color, 2014., 35 TFSI",
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Lotus Elise",
                            Price = 30000.0,
                            SellerId = 2,
                            TypeId = 1
                        });
                });

            modelBuilder.Entity("Marketplace.Domain.Entities.ItemType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImagePath")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ItemType");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "Cars and other transportation. Scooters, bikes, trains, boats, yachts, airships..",
                            ImagePath = "Categories/1.jpg",
                            Name = "Cars&Vehicles"
                        },
                        new
                        {
                            Id = 2,
                            Description = "Everything for your home, small home and kitchen electronics.",
                            ImagePath = "Categories/2.jpg",
                            Name = "Home&Kitchen"
                        },
                        new
                        {
                            Id = 3,
                            Description = "All kinds of devices. Gaming equipment, laptops, home appliances etc.",
                            ImagePath = "Categories/3.jpg",
                            Name = "Electronics"
                        },
                        new
                        {
                            Id = 4,
                            Description = "Sports clothing and sport requisits",
                            ImagePath = "Categories/4.jpg",
                            Name = "Sports&Outdoors"
                        },
                        new
                        {
                            Id = 5,
                            Description = "Everything for women.",
                            ImagePath = "Categories/5.jpg",
                            Name = "Women's clothing"
                        },
                        new
                        {
                            Id = 6,
                            Description = "All kinds of jewelry and decorative items.",
                            ImagePath = "Categories/6.jpg",
                            Name = "Jewelry&Accesories"
                        },
                        new
                        {
                            Id = 7,
                            Description = "Clothing items for men.",
                            ImagePath = "Categories/7.jpg",
                            Name = "Mens's clothing"
                        },
                        new
                        {
                            Id = 8,
                            Description = "Books and stuff.",
                            ImagePath = "Categories/8.jpg",
                            Name = "Books&Media"
                        },
                        new
                        {
                            Id = 9,
                            Description = "For various intelectual or physical services.",
                            ImagePath = "Categories/9.jpg",
                            Name = "Services"
                        },
                        new
                        {
                            Id = 10,
                            Description = "Whatever else.",
                            ImagePath = "Categories/10.jpg",
                            Name = "Other"
                        });
                });

            modelBuilder.Entity("Marketplace.Domain.Entities.Transfer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<double>("Amount")
                        .HasColumnType("float");

                    b.Property<int?>("BuyerId")
                        .HasColumnType("int");

                    b.Property<int?>("ItemId")
                        .HasColumnType("int");

                    b.Property<int?>("SellerId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Time")
                        .HasColumnType("datetime2");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("BuyerId");

                    b.HasIndex("ItemId");

                    b.HasIndex("SellerId");

                    b.ToTable("Transfer");
                });

            modelBuilder.Entity("Marketplace.Domain.Entities.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<double>("Balance")
                        .HasColumnType("float");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RefreshToken")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("RefreshTokenExpiry")
                        .HasColumnType("datetime2");

                    b.Property<int>("Role")
                        .HasColumnType("int");

                    b.Property<string>("Salt")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("User");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Balance = 0.0,
                            Email = "aa@gmail.com",
                            IsActive = true,
                            Name = "John Doe",
                            Password = "eUS8Chai2BphVYD54jXg24iRP80n2XLBCf5klkgVNGSYr5xCvG05DnHPTRGBxK2q",
                            Phone = "67 407648",
                            Role = 1,
                            Salt = "eUS8Chai2BphVYD54jXg2w==",
                            Username = "admin"
                        },
                        new
                        {
                            Id = 2,
                            Balance = 0.0,
                            Email = "pp@gmail.com",
                            IsActive = true,
                            Name = "Peter Petrovich",
                            Password = "qwbR24euiRkhKRT2Rm5l9DCbmk/euQ460gB8D4N0tZGXhfdfSiaR+VT5STBp2hI9",
                            Phone = "+382 67 111 222",
                            Role = 0,
                            Salt = "qwbR24euiRkhKRT2Rm5l9A==",
                            Username = "peter"
                        },
                        new
                        {
                            Id = 3,
                            Balance = 1000000.0,
                            Email = "gr@gmail.com",
                            IsActive = true,
                            Name = "Guy Rich",
                            Password = "eUS8Chai2BphVYD54jXg24iRP80n2XLBCf5klkgVNGSYr5xCvG05DnHPTRGBxK2q",
                            Phone = "+382 67 101 909",
                            Role = 0,
                            Salt = "eUS8Chai2BphVYD54jXg2w==",
                            Username = "rich"
                        });
                });

            modelBuilder.Entity("Marketplace.Domain.Entities.Image", b =>
                {
                    b.HasOne("Marketplace.Domain.Entities.Item", "Item")
                        .WithMany("Images")
                        .HasForeignKey("ItemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Item");
                });

            modelBuilder.Entity("Marketplace.Domain.Entities.Item", b =>
                {
                    b.HasOne("Marketplace.Domain.Entities.User", "Seller")
                        .WithMany()
                        .HasForeignKey("SellerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Marketplace.Domain.Entities.ItemType", "Type")
                        .WithMany()
                        .HasForeignKey("TypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Seller");

                    b.Navigation("Type");
                });

            modelBuilder.Entity("Marketplace.Domain.Entities.Transfer", b =>
                {
                    b.HasOne("Marketplace.Domain.Entities.User", "Buyer")
                        .WithMany()
                        .HasForeignKey("BuyerId");

                    b.HasOne("Marketplace.Domain.Entities.Item", "Item")
                        .WithMany()
                        .HasForeignKey("ItemId");

                    b.HasOne("Marketplace.Domain.Entities.User", "Seller")
                        .WithMany()
                        .HasForeignKey("SellerId");

                    b.Navigation("Buyer");

                    b.Navigation("Item");

                    b.Navigation("Seller");
                });

            modelBuilder.Entity("Marketplace.Domain.Entities.Item", b =>
                {
                    b.Navigation("Images");
                });
#pragma warning restore 612, 618
        }
    }
}
